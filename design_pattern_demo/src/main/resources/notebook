1.设计模式7大原则：
    开闭原则：对扩展开放，对修改关闭。为了使程序的扩展性好，易于维护和升级。使用接口和抽象类。
    里氏替换原则：任何基类可以出现的地方，子类一定可以出现。里氏代换原则是对“开-闭”原则的补充。
    依赖倒置原则：开闭原则的基础，具体内容：面向接口编程，依赖于抽象而不依赖于具体。
    单一职责原则：控制类的粒度大小，对象解耦、提高其内聚性。
    接口隔离原则：使用多个隔离的接口，比使用单个接口要好。
    迪米特法则：一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。
    合成复用原则：原则是尽量使用合成/聚合的方式，而不是使用继承。
2.设计模式：
    创建型模式（5种）：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。
    结构型模式(7种)：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。
    行为型模式(11种)：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。

单例模式：Spring IOC；Windows的任务管理器
工厂方法模式：接口，Producer、Sender，发短信、发邮件
抽象工厂模式：抽象咖啡类、甜点类，美式甜品工厂、意式甜品工厂
建造者模式：指挥者、建造者、摩拜单车、ofo单车；组装电脑
原型模式：克隆羊

适配器模式：电脑 读卡器 读取 SD卡 和 TF卡；插座转换器
装饰器模式：快餐店，炒饭，炒面，配菜，鸡蛋，培根，蛋炒饭、培根炒饭、培根蛋炒饭，鸡蛋炒面，培根炒面
代理模式：火车站代理售票点，代售点调用火车站的售票方法
外观模式：外观角色、子系统角色；智能家电控制，开灯、开电视、开空调，关灯、关电视、关空调，通过智能音响来控制，一键开启，一键关闭
桥接模式：抽象化角色，实现化角色、具体实现化角色；视频播放器，在不同操作系统上播放多种格式视频文件
组合模式：软件菜单，菜单、菜单项
享元模式：俄罗斯方块，不同形状，不同颜色；Integer类，IntegerCache [-128,127]

模板方法模式: 反向控制。炒菜流程；银行排队办业务流程，取号、排队、办理业务(取款、存款、开户...)、评分,流程一致，把办理具体业务留到子类中具体实现
策略模式: 促销活动，针对不同节日推出不同的促销活动，由促销员展示给客户。抽象策略类 Comparator类 Arrays.sort(list, 排序策略)
命令模式：订单、服务员、厨师，服务员拿到订单向厨师发起命令 。Runnable接口，Thread是调用着，start()是执行者
责任链模式：请假天数不同对应的审批领导不同，请假条提交到组长，组长收到，1天内组长审批，大于1天组长提交到项目经理审批，大于3天交给CTO审批；JavaWeb过滤器FilterChain
状态模式：通过电梯按钮来控制电梯状态，开门、关门、运行、停止
观察者模式: 微信公众号发布订阅；警察抓小偷，被观察者状态发生改变，通知观察者
中介者模式：租房，房屋中介
迭代器模式：Iterator
访问者模式：给宠物喂食，主人可以喂、其他人也可以喂
备忘录模式：快照，游戏存档
解释器模式：实现加减法软件